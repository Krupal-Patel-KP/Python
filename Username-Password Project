# Username-Password Project using Python
# This project demonstrates basic Python concepts such as variables, if-else conditions,
# while loops, break statements, methods, and functions.

# created a variable which contains 100 valid email domain
valid_domains = (
    # List of valid email domains (add more if needed)
    "gmail.com",
    "yahoo.com",
    "hotmail.com",
    "aol.com",
    "hotmail.co.uk",
    "hotmail.fr",
    "msn.com",
    "yahoo.fr",
    "wanadoo.fr",
    "orange.fr",
    "comcast.net",
    "yahoo.co.uk",
    "yahoo.com.br",
    "yahoo.co.in",
    "live.com",
    "rediffmail.com",
    "free.fr",
    "gmx.de",
    "web.de",
    "yandex.ru",
    "ymail.com",
    "libero.it",
    "outlook.com",
    "uol.com.br",
    "bol.com.br",
    "mail.ru",
    "cox.net",
    "hotmail.it",
    "sbcglobal.net",
    "sfr.fr",
    "live.fr",
    "verizon.net",
    "live.co.uk",
    "googlemail.com",
    "yahoo.es",
    "ig.com.br",
    "live.nl",
    "bigpond.com",
    "terra.com.br",
    "yahoo.it",
    "neuf.fr",
    "yahoo.de",
    "alice.it",
    "rocketmail.com",
    "att.net",
    "laposte.net",
    "facebook.com",
    "bellsouth.net",
    "yahoo.in",
    "hotmail.es",
    "charter.net",
    "yahoo.ca",
    "yahoo.com.au",
    "rambler.ru",
    "hotmail.de",
    "tiscali.it",
    "shaw.ca",
    "yahoo.co.jp",
    "sky.com",
    "earthlink.net",
    "optonline.net",
    "freenet.de",
    "t-online.de",
    "aliceadsl.fr",
    "virgilio.it",
    "home.nl",
    "qq.com",
    "telenet.be",
    "me.com",
    "yahoo.com.ar",
    "tiscali.co.uk",
    "yahoo.com.mx",
    "voila.fr",
    "gmx.net",
    "mail.com",
    "planet.nl",
    "tin.it",
    "live.it",
    "ntlworld.com",
    "arcor.de",
    "yahoo.co.id",
    "frontiernet.net",
    "hetnet.nl",
    "live.com.au",
    "yahoo.com.sg",
    "zonnet.nl",
    "club-internet.fr",
    "juno.com",
    "optusnet.com.au",
    "blueyonder.co.uk",
    "bluewin.ch",
    "skynet.be",
    "sympatico.ca",
    "windstream.net",
    "mac.com",
    "centurytel.net",
    "chello.nl",
    "live.ca",
    "aim.com",
    "bigpond.net.au")


# Function to handle user input for the username
def requestUsername(username):
  count = 1
  while (count < 6):
    # Allow the user to enter a valid username for up to 5 attempts
    if not username.endswith(valid_domains):
      print("you have used ", count, "chances so only", 6 - count,
            "chances left")
      username = input("Enter your username: ")
      count = count + 1
    # If a valid username is entered, prompt for the password
    else:
      password = input("please enter your password")
      requestPassword(password)
      break
  else:
    print("Account locked - contact administrator to unlock")


# Function to handle user input for the password
def requestPassword(password):
  count = 1
  while (count < 6):
    # Allow the user to enter a valid password for up to 5 attempts
    if len(password) < 8 or len(password) > 16:
      print("you have used ", count, "chances so only", 6 - count,
            "chances left")
      password = input("Enter your password: ")
      count = count + 1
    # If a valid password is entered
    else:
      print("Welcome to SBI")
      break
  else:
    print("Account locked - contact administrator to unlock")


######## Main code for Username-Password project ########

print("Welcome to State Bank of India")
# Getting username from user
username = input("please enter your username")
# Check if it is not a valid username
if not username.endswith(valid_domains):
  # Call the function to handle username input
  requestUsername(username)
else:
  # Get the password from the user
  password = input("please enter your password")
  # Check if the password is not valid
  if len(password) < 8 or len(password) > 16:
    # Call the function to handle password input
    requestPassword(password)
  # If the user enter the valid password
  else:
    print("Welcome to SBI")

print("Thank you for visiting State Bank of India")
